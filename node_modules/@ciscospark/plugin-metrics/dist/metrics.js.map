{"version":3,"sources":["../src/metrics.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAMA;;;;AAGA,IAAM,UAAU,uBAAY,MAAZ,CAAmB;AACjC,sBADiC;;AAGjC,QAHiC,kBAG1B,GAH0B,EAGrB,KAHqB,EAGd;AACjB,YAAQ,SAAS,EAAjB;AACA,4BAAS,KAAT,EAAgB;AACd,eAAS,KAAK,MAAL,CAAY,OADP;AAEd,WAAK,QAAQ,GAAR,CAAY,QAAZ,iBAFS;AAGd,eAAS,KAAK,KAAL,CAAW,OAHN;AAId,YAAM,KAAK,GAAL,EAJQ;AAKd,gBAAU,KAAK,GAAL;AALI,KAAhB;;AAQA,WAAO,KAAK,OAAL,CAAa;AAClB,oBADkB;AAElB,wBAFkB;AAGlB,yBAHkB;AAIlB,YAAM;AACJ,iBAAS,CAAC,sBAAc,EAAC,QAAD,EAAd,EAAqB,KAArB,CAAD;AADL;AAJY,KAAb,CAAP;AAQD;AArBgC,CAAnB,CAAhB,CATA;;;;;;kBAiCe,O","file":"metrics.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015-2016 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nimport {SparkPlugin} from '@ciscospark/spark-core';\nimport {defaults} from 'lodash';\n\nconst Metrics = SparkPlugin.extend({\n  namespace: `Metrics`,\n\n  submit(key, value) {\n    value = value || {};\n    defaults(value, {\n      appType: this.config.appType,\n      env: process.env.NODE_ENV || `development`,\n      version: this.spark.version,\n      time: Date.now(),\n      postTime: Date.now()\n    });\n\n    return this.request({\n      method: `POST`,\n      service: `metrics`,\n      resource: `metrics`,\n      body: {\n        metrics: [Object.assign({key}, value)]\n      }\n    });\n  }\n});\n\nexport default Metrics;\n"]}
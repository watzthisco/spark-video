{"version":3,"sources":["../../src/device/features-model.js"],"names":[],"mappings":";;;;;;;;;;AAKA;;;;AACA;;;;;;AANA;;;;;AAQA,IAAM,gBAAgB,yBAAS,MAAT,CAAgB;AACpC,eAAa;AACX,0CADW;AAEX,4CAFW;AAGX;AAHW,GADuB;;AAOpC;;;;;AAKA,OAZoC,iBAY9B,OAZ8B,EAYrB;AAAA;;AACb,wBAAY,KAAK,UAAjB,EAA6B,OAA7B,CAAqC,UAAC,GAAD,EAAS;AAC5C,YAAK,KAAL,CAAW,GAAX,EAAgB,OAAhB;AACD,KAFD;;AAIA,wBAAY,KAAK,SAAjB,EAA4B,OAA5B,CAAoC,UAAC,GAAD,EAAS;AAC3C,YAAK,GAAL,EAAU,KAAV;AACD,KAFD;;AAIA,wBAAY,KAAK,YAAjB,EAA+B,OAA/B,CAAuC,UAAC,GAAD,EAAS;AAC9C,YAAK,GAAL,EAAU,KAAV;AACD,KAFD;;AAIA,WAAO,IAAP;AACD,GA1BmC;AA4BpC,YA5BoC,wBA4BvB;AAAA;;AACX;AACA;AACA,sCAAkC,OAAlC,CAA0C,UAAC,mBAAD,EAAyB;AACjE,2CAAqC,OAArC,CAA6C,UAAC,cAAD,EAAoB;AAC/D,eAAK,cAAL,EAAqB,EAArB,CAAwB,mBAAxB,EAA6C,UAAC,KAAD,EAAQ,OAAR,EAAoB;AAC/D,iBAAK,OAAL,aAAuB,cAAvB,UAA+C,OAAK,cAAL,CAA/C,EAAqE,OAArE;AACD,SAFD;AAGD,OAJD;AAKD,KAND;AAOD;AAtCmC,CAAhB,CAAtB;;kBAyCe,a","file":"features-model.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015-2016 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport AmpState from 'ampersand-state';\nimport FeatureCollection from './feature-collection';\n\nconst FeaturesModel = AmpState.extend({\n  collections: {\n    developer: FeatureCollection,\n    entitlement: FeatureCollection,\n    user: FeatureCollection\n  },\n\n  /**\n   * Recursively clear children/collections;\n   * @param {Object} options\n   * @returns {SparkPlugin}\n   */\n  clear(options) {\n    Object.keys(this.attributes).forEach((key) => {\n      this.unset(key, options);\n    });\n\n    Object.keys(this._children).forEach((key) => {\n      this[key].clear();\n    });\n\n    Object.keys(this._collections).forEach((key) => {\n      this[key].reset();\n    });\n\n    return this;\n  },\n\n  initialize() {\n    /* eslint max-nested-callbacks: [0] */\n    // Propagate change(:[attribute]) events from collections\n    [`change:value`, `add`, `remove`].forEach((collectionEventName) => {\n      [`developer`, `entitlement`, `user`].forEach((collectionName) => {\n        this[collectionName].on(collectionEventName, (model, options) => {\n          this.trigger(`change:${collectionName}`, this, this[collectionName], options);\n        });\n      });\n    });\n  }\n});\n\nexport default FeaturesModel;\n"]}
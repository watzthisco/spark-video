{"version":3,"sources":["../../src/interceptors/embargo.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;AAEA;;;;IAGqB,kB;;;;;;;;;;;;AASnB;;;;;;oCAMgB,O,EAAS,M,EAAQ;AAC/B,UAAI,OAAO,UAAP,KAAsB,GAA1B,EAA+B;AAC7B,aAAK,KAAL,CAAW,MAAX,CAAkB,KAAlB;AACA,aAAK,KAAL,CAAW,WAAX,CAAuB,KAAvB;AACA,aAAK,KAAL,CAAW,MAAX,CAAkB,IAAlB;AACD;;AAED,aAAO,kBAAQ,MAAR,CAAe,MAAf,CAAP;AACD;;;;AAtBD;;;6BAGgB;AACd;AACA,aAAO,IAAI,kBAAJ,CAAuB,EAAC,OAAO,IAAR,EAAvB,CAAP;AACD;;;yBAjBH;;;;;kBAUqB,kB","file":"embargo.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015-2016 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Interceptor} from '@ciscospark/http-core';\n\n/**\n * @class\n */\nexport default class EmbargoInterceptor extends Interceptor {\n  /**\n   * @returns {EmbargoInterceptor}\n   */\n  static create() {\n    /* eslint no-invalid-this: [0] */\n    return new EmbargoInterceptor({spark: this});\n  }\n\n  /**\n   * @see Interceptor#onResponseError\n   * @param {Object} options\n   * @param {Error} reason\n   * @returns {Promise}\n   */\n  onResponseError(options, reason) {\n    if (reason.statusCode === 451) {\n      this.spark.device.clear();\n      this.spark.credentials.clear();\n      this.spark.logger.info(`Received \\`HTTP 451 Unavailable For Legal Reasons\\`, discarding credentials and device registration`);\n    }\n\n    return Promise.reject(reason);\n  }\n}\n"]}
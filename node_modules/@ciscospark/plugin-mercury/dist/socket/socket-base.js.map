{"version":3,"sources":["../../src/socket/socket-base.js"],"names":[],"mappings":"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","file":"socket-base.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015-2016 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {EventEmitter} from 'events';\nimport {AuthorizationError, ConnectionError} from '../errors';\nimport {checkRequired} from '@ciscospark/common';\nimport {defaults, has, isObject} from 'lodash';\nimport uuid from 'uuid';\n\nconst sockets = new WeakMap();\n\n/**\n * Generalized socket abstraction\n */\nexport default class Socket extends EventEmitter {\n  /**\n   * constructor\n   * @returns {Socket}\n   */\n  constructor() {\n    super();\n    this.onmessage = this.onmessage.bind(this);\n    this.onclose = this.onclose.bind(this);\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {string}\n   */\n  get binaryType() {\n    return sockets.get(this).binaryType;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {number}\n   */\n  get bufferedAmount() {\n    return sockets.get(this).bufferedAmount;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {string}\n   */\n  get extensions() {\n    return sockets.get(this).extensions;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {string}\n   */\n  get protocol() {\n    return sockets.get(this).protocol;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {number}\n   */\n  get readyState() {\n    return sockets.get(this).readyState;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {string}\n   */\n  get url() {\n    return sockets.get(this).url;\n  }\n\n  /**\n   * Provides the environmentally appropriate constructor (ws in NodeJS,\n   * WebSocket in browsers)\n   * @returns {WebSocket}\n   */\n  static getWebSocketConstructor() {\n    throw new Error(`Socket.getWebSocketConstructor() must be implemented in an environmentally appropriate way`);\n  }\n\n  /**\n   * Closes the socket\n   * @param {Object} options\n   * @param {string} options.reason\n   * @param {number} options.code\n   * @returns {Promise}\n   */\n  close(options) {\n    return new Promise((resolve, reject) => {\n      this.logger.info(`socket: closing`);\n      const socket = sockets.get(this);\n      if (socket.readyState === 2 || socket.readyState === 3) {\n        this.logger.info(`socket: already closed`);\n        resolve();\n        return;\n      }\n\n      options = options || {};\n      if (options.code && options.code !== 1000 && (options.code < 3000 || options.code > 4999)) {\n        reject(new Error(`\\`options.code\\` must be 1000 or between 3000 and 4999 (inclusive)`));\n        return;\n      }\n\n      options = defaults(options, {\n        code: 1000,\n        reason: `Done`\n      });\n\n      const closeTimer = setTimeout(() => {\n        try {\n          this.logger.info(`socket: no close event received, forcing closure`);\n          resolve(this.onclose({\n            code: 1000,\n            reason: `Done (forced)`\n          }));\n        }\n        catch (error) {\n          this.logger.warn(`socket: force-close failed`, error);\n        }\n      }, this.forceCloseDelay);\n\n      socket.onclose = (event) => {\n        this.logger.info(`socket: close event fired`, event.code, event.reason);\n        clearTimeout(closeTimer);\n        this.onclose(event);\n        resolve(event);\n      };\n\n      socket.close(options.code, options.reason);\n\n      return;\n    });\n  }\n\n  /**\n   * Opens a WebSocket\n   * @param {string} url\n   * @param {options} options\n   * @param {number} options.forceCloseDelay (required)\n   * @param {number} options.pingInterval (required)\n   * @param {number} options.pongTimeout (required)\n   * @param {string} options.token (required)\n   * @param {string} options.trackingId (required)\n   * @param {Logger} options.logger (required)\n   * @param {string} options.logLevelToken\n   * @returns {Promise}\n   */\n  open(url, options) {\n    return new Promise((resolve, reject) => {\n      /* eslint complexity: [0] */\n      if (!url) {\n        reject(new Error(`\\`url\\` is required`));\n        return;\n      }\n\n      if (sockets.get(this)) {\n        reject(new Error(`Socket#open() can only be called once per instance`));\n        return;\n      }\n\n      options = options || {};\n\n      checkRequired([\n        `forceCloseDelay`,\n        `pingInterval`,\n        `pongTimeout`,\n        `token`,\n        `trackingId`,\n        `logger`\n      ], options);\n\n      Object.keys(options).forEach((key) => {\n        Reflect.defineProperty(this, key, {\n          enumerable: false,\n          value: options[key]\n        });\n      });\n\n      /* istanbul ignore else */\n      if (!url.includes(`outboundWireFormat=text`)) {\n        url += `${url.includes(`?`) ? `&` : `?`}outboundWireFormat=text`;\n      }\n\n      // always add buffer_states query param\n      /* istanbul ignore else */\n      if (!url.includes(`bufferStates`)) {\n        url += `${url.includes(`?`) ? `&` : `?`}bufferStates=true`;\n      }\n\n      const WebSocket = Socket.getWebSocketConstructor();\n\n      this.logger.info(`socket: creating WebSocket`);\n      const socket = new WebSocket(url);\n      socket.binaryType = `arraybuffer`;\n      socket.onmessage = this.onmessage;\n\n      socket.onclose = (event) => {\n        this.logger.info(`socket: closed while connecting`, event.code, event.reason);\n        if (event.code === 1008) {\n          return reject(new AuthorizationError(event));\n        }\n        return reject(new ConnectionError(event));\n      };\n\n      socket.onopen = () => {\n        this.logger.info(`socket: connected`);\n        this._authorize()\n          .then(() => {\n            this.logger.info(`socket: authorized`);\n            socket.onclose = this.onclose;\n            resolve();\n          })\n          .catch(reject);\n      };\n\n      socket.onerror = (event) => {\n        this.logger.warn(`socket: error event fired`, event);\n      };\n\n      sockets.set(this, socket);\n      this.logger.info(`socket: waiting for server`);\n      return;\n    });\n  }\n\n  /**\n   * Handles incoming CloseEvents\n   * @param {CloseEvent} event\n   * @returns {undefined}\n   */\n  onclose(event) {\n    this.logger.info(`socket: closed`, event.code, event.reason);\n    clearTimeout(this.pongTimer);\n    clearTimeout(this.pingTimer);\n\n    event = this._fixCloseCode(event);\n    this.emit(`close`, event);\n\n    // Remove all listeners to (a) avoid reacting to late pongs and (b) ensure\n    // we don't have a retain cycle.\n    this.removeAllListeners();\n  }\n\n  /**\n   * Handles incoming message events\n   * @param {MessageEvent} event\n   * @returns {undefined}\n   */\n  onmessage(event) {\n    try {\n      const data = JSON.parse(event.data);\n      const sequenceNumber = parseInt(data.sequenceNumber, 10);\n      this.logger.debug(`socket: sequence number: `, sequenceNumber);\n      if (this.expectedSequenceNumber && sequenceNumber !== this.expectedSequenceNumber) {\n        this.logger.debug(`socket: sequence number mismatch indicates lost mercury message. expected: ${this.expectedSequenceNumber}, actual: ${sequenceNumber}`);\n        this.emit(`sequence-mismatch`, sequenceNumber, this.expectedSequenceNumber);\n      }\n      this.expectedSequenceNumber = sequenceNumber + 1;\n\n      // Yes, it's a little weird looking; we want to emit message events that\n      // look like normal socket message events, but event.data cannot be\n      // modified and we don't actually care about anything but the data property\n      const processedEvent = {data};\n      this._acknowledge(processedEvent);\n      if (data.type === `pong`) {\n        this.emit(`pong`, processedEvent);\n      }\n      else {\n        this.emit(`message`, processedEvent);\n      }\n    }\n    catch (error) {\n      // The above code should only be able to throw if we receive an unparsable\n      // message from Mercury. At this time, the only action we have is to\n      // ignore it and move on.\n      /* istanbul ignore next */\n      this.logger.warn(`socket: error while receiving WebSocket message`, error);\n    }\n  }\n\n  /**\n   * Sends a message up the socket\n   * @param {mixed} data\n   * @returns {Promise}\n   */\n  send(data) {\n    return new Promise((resolve, reject) => {\n      if (this.readyState !== 1) {\n        return reject(new Error(`INVALID_STATE_ERROR`));\n      }\n\n      if (isObject(data)) {\n        data = JSON.stringify(data);\n      }\n\n      const socket = sockets.get(this);\n      socket.send(data);\n      return resolve();\n    });\n  }\n\n  /**\n   * Sends an acknowledgment for a specific event\n   * @param {MessageEvent} event\n   * @returns {Promise}\n   */\n  _acknowledge(event) {\n    if (!event) {\n      return Promise.reject(new Error(`\\`event\\` is required`));\n    }\n\n    if (!has(event, `data.id`)) {\n      return Promise.reject(new Error(`\\`event.data.id\\` is required`));\n    }\n\n    return this.send({\n      messageId: event.data.id,\n      type: `ack`\n    });\n  }\n\n  /**\n   * Sends an auth message up the socket\n   * @private\n   * @returns {Promise}\n   */\n  _authorize() {\n    return new Promise((resolve, reject) => {\n      this.logger.info(`socket: authorizing`);\n      this.send({\n        id: uuid.v4(),\n        type: `authorization`,\n        data: {\n          token: this.token\n        },\n        trackingId: this.trackingId,\n        logLevelToken: this.logLevelToken\n      });\n\n      const id = uuid.v4();\n      this.once(`pong`, (event) => {\n        try {\n          if (event.data.id === id) {\n            this._ping();\n            return resolve();\n          }\n          return reject(new Error(`socket: received response to wrong ping`));\n        }\n        catch (error) {\n          // This try/catch block was added as a debugging step; to the best of\n          // my knowledge, the above can never throw.\n          /* istanbul ignore next */\n          this.logger.error(`socket: failed to receive initial pong`, error);\n          /* istanbul ignore next */\n          return reject(error);\n        }\n      });\n\n      this.send({\n        id,\n        type: `ping`\n      });\n    });\n  }\n\n  /**\n   * Deals with the fact that some browsers drop some close codes (but not\n   * close reasons).\n   * @param {CloseEvent} event\n   * @private\n   * @returns {CloseEvent}\n   */\n  _fixCloseCode(event) {\n    if (event.code === 1005 && event.reason) {\n      switch (event.reason.toLowerCase()) {\n      case `replaced`:\n        this.logger.info(`socket: fixing CloseEvent code for reason: `, event.reason);\n        event.code = 4000;\n        break;\n      case `authentication failed`:\n      case `authentication did not happen within the timeout window of 30000 seconds.`:\n        this.logger.info(`socket: fixing CloseEvent code for reason: `, event.reason);\n        event.code = 1008;\n        break;\n      default:\n        // do nothing\n      }\n    }\n\n    return event;\n  }\n\n  /**\n   * Sends a ping up the socket and confirms we get it back\n   * @param {[type]} id\n   * @private\n   * @returns {[type]}\n   */\n  _ping(id) {\n    const confirmPongId = (event) => {\n      try {\n        this.logger.debug(`socket: pong`, event.data.id);\n        if (event.data && event.data.id !== id) {\n          this.logger.info(`socket: received pong for wrong ping id, closing socket`);\n          this.logger.debug(`socket: expected`, id, `received`, event.data.id);\n          this.close({\n            code: 1000,\n            reason: `Pong mismatch`\n          });\n        }\n      }\n      catch (error) {\n        // This try/catch block was added as a debugging step; to the best of my\n        // knowledge, the above can never throw.\n        /* istanbul ignore next */\n        this.logger.error(`socket: error occurred in confirmPongId`, error);\n      }\n    };\n\n    const onPongNotReceived = () => {\n      try {\n        this.logger.info(`socket: pong not receive in expected period, closing socket`);\n        this.close({\n          code: 1000,\n          reason: `Pong not received`\n        })\n          .catch((reason) => {\n            this.logger.warn(`socket: failed to close socket after missed pong`, reason);\n          });\n      }\n      catch (error) {\n        // This try/catch block was added as a debugging step; to the best of my\n        // knowledge, the above can never throw.\n        /* istanbul ignore next */\n        this.logger.error(`socket: error occurred in onPongNotReceived`, error);\n      }\n    };\n\n    const scheduleNextPingAndCancelPongTimer = () => {\n      try {\n        clearTimeout(this.pongTimer);\n        this.pingTimer = setTimeout(() => this._ping(), this.pingInterval);\n      }\n      catch (error) {\n        // This try/catch block was added as a debugging step; to the best of my\n        // knowledge, the above can never throw.\n        /* istanbul ignore next */\n        this.logger.error(`socket: error occurred in scheduleNextPingAndCancelPongTimer`, error);\n      }\n    };\n\n    id = id || uuid.v4();\n    this.pongTimer = setTimeout(onPongNotReceived, this.pongTimeout);\n    this.once(`pong`, scheduleNextPingAndCancelPongTimer);\n    this.once(`pong`, confirmPongId);\n\n    this.logger.info(`socket: ping ${id}`);\n    return this.send({\n      id,\n      type: `ping`\n    });\n  }\n}\n"]}
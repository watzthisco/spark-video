{"version":3,"sources":["../src/map-utils.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAQO,IAAM,8BAAW,qBAAM,UAAC,GAAD,EAAM,KAAN,EAAgB;AAC5C,MAAI,GAAJ,CAAQ,KAAR;AACD,CAFuB,CAAjB,CARP;;;;;;AAYO,IAAM,wCAAgB,qBAAM,UAAC,GAAD,EAAM,GAAN,EAAc;AAC/C,MAAI,WAAW,IAAI,GAAJ,CAAQ,GAAR,CAAf;AACA,MAAI,CAAC,QAAL,EAAe;AACb,eAAW,mBAAX;AACA,QAAI,GAAJ,CAAQ,GAAR,EAAa,QAAb;AACD;AACD,SAAO,QAAP;AACD,CAP4B,CAAtB;;AASA,IAAM,wCAAgB,qBAAM,UAAC,GAAD,EAAM,GAAN,EAAc;AAC/C,MAAI,MAAM,IAAI,GAAJ,CAAQ,GAAR,CAAV;AACA,MAAI,CAAC,GAAL,EAAU;AACR,UAAM,mBAAN;AACA,QAAI,GAAJ,CAAQ,GAAR,EAAa,GAAb;AACD;AACD,SAAO,GAAP;AACD,CAP4B,CAAtB;;AASA,IAAM,gDAAoB,qBAAM,UAAC,GAAD,EAAM,GAAN,EAAc;AACnD,MAAI,WAAW,IAAI,GAAJ,CAAQ,GAAR,CAAf;AACA,MAAI,CAAC,QAAL,EAAe;AACb,eAAW,uBAAX;AACA,QAAI,GAAJ,CAAQ,GAAR,EAAa,QAAb;AACD;AACD,SAAO,QAAP;AACD,CAPgC,CAA1B;;AASP;AACA;;AAEO,IAAM,0DAAyB,qBAAM,UAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAe;AACzD,MAAM,MAAM,kBAAkB,CAAlB,EAAqB,EAArB,CAAZ;AACA,MAAM,MAAM,cAAc,GAAd,EAAmB,EAAnB,CAAZ;AACA,SAAO,GAAP;AACD,CAJqC,CAA/B;;AAMA,IAAM,8DAA2B,qBAAM,UAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAkB;AAC9D,MAAM,MAAM,kBAAkB,CAAlB,EAAqB,EAArB,CAAZ;AACA,MAAM,MAAM,cAAc,GAAd,EAAmB,EAAnB,CAAZ;AACA,WAAS,GAAT,EAAc,CAAd;AACD,CAJuC,CAAjC","file":"map-utils.js","sourcesContent":["/**!\n *\n * Copyright (c) 2016 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nimport {curry} from 'lodash';\n\nexport const addToSet = curry((set, value) => {\n  set.add(value);\n});\n\nexport const getMapFromMap = curry((map, key) => {\n  let childMap = map.get(key);\n  if (!childMap) {\n    childMap = new Map();\n    map.set(key, childMap);\n  }\n  return childMap;\n});\n\nexport const getSetFromMap = curry((map, key) => {\n  let set = map.get(key);\n  if (!set) {\n    set = new Set();\n    map.set(key, set);\n  }\n  return set;\n});\n\nexport const getWeakMapFromMap = curry((map, key) => {\n  let childMap = map.get(key);\n  if (!childMap) {\n    childMap = new WeakMap();\n    map.set(key, childMap);\n  }\n  return childMap;\n});\n\n// I'm pretty sure there should be a functional way to chain the following\n// functions, but I can't figure out what it is.\n\nexport const getMappedWeakMappedSet = curry((m, mk, wk) => {\n  const map = getWeakMapFromMap(m, mk);\n  const set = getSetFromMap(map, wk);\n  return set;\n});\n\nexport const addToMappedWeakMappedSet = curry((m, mk, wk, v) => {\n  const map = getWeakMapFromMap(m, mk);\n  const set = getSetFromMap(map, wk);\n  addToSet(set, v);\n});\n"]}
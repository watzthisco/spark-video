{"version":3,"sources":["../src/call.js"],"names":[],"mappings":"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","file":"call.js","sourcesContent":["/**!\n *\n * Copyright (c) 2016 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\n/* eslint-env browser: true */\n/* global RTCPeerConnection, RTCSessionDescription */\n\nimport {SparkPlugin} from '@ciscospark/spark-core';\nimport {oneFlight, tap} from '@ciscospark/common';\nimport {\n  createOffer,\n  acceptAnswer,\n  end,\n  mediaDirection as mediaDirectionFromPeerConnection,\n  addStream,\n  stopSendingAudio,\n  stopSendingVideo,\n  startSendingAudio,\n  startSendingVideo,\n  stopReceivingAudio,\n  stopReceivingVideo,\n  startReceivingAudio,\n  startReceivingVideo\n} from './webrtc';\nimport {\n  eventKeys,\n  USE_INCOMING,\n  FETCH\n} from '@ciscospark/plugin-locus';\nimport {\n  activeParticipants,\n  direction,\n  isActive,\n  joined,\n  joinedOnThisDevice,\n  participantIsJoined,\n  remoteAudioMuted,\n  remoteParticipant,\n  remoteVideoMuted\n} from './state-parsers';\nimport {defaults, find} from 'lodash';\n\n/**\n * @event ringing\n * @instance\n * @memberof Call\n */\n\n/**\n * @event connected\n * @instance\n * @memberof Call\n */\n\n/**\n * @event disconnected\n * @instance\n * @memberof Call\n */\n\n/**\n * @event localMediaStream:change\n * @instance\n * @memberof Call\n */\n\n/**\n * @event remoteMediaStream:change\n * @instance\n * @memberof Call\n */\n\n/**\n * @event error\n * @instance\n * @memberof Call\n */\n\n/**\n * Payload for {@link Call#sendFeedback}\n * @typedef {Object} Types~Feedback\n * @property {number} userRating Number between 1 and 5 (5 being best) to let\n * the user score the call\n * @property {string} userComments Freeform feedback from the user about the\n * call\n * @property {Boolean} includeLogs set to true to submit client logs to the\n * Cisco Spark cloud. Note: at this time, all logs, not just call logs,\n * generated by the sdk will be uploaded to the Spark Cloud. Care has been taken\n * to avoid including PII in these logs, but if you've taken advantage of the\n * SDK's logger, you should make sure to avoid logging PII as well.\n */\n\n/**\n * @class\n * @extends SparkPlugin\n */\nconst Call = SparkPlugin.extend({\n  namespace: `Phone`,\n\n  session: {\n    locus: `object`,\n    pc: `object`,\n    /**\n     * Returns the local MediaStream for the call. May initially be `null`\n     * between the time @{Phone#dial is invoked and the  media stream is\n     * acquired if {@link Phone#dial} is invoked without a `localMediaStream`\n     * option.\n     *\n     * This property can also be set mid-call in which case the streams sent to\n     * the remote party are replaced by this stream. On success, the\n     * {@link Call}'s {@link localMediaStream:change} event fires, notifying any\n     * listeners that we are now sending media from a new source.\n     * @instance\n     * @memberof Call\n     * @member {MediaStream}\n     * @readonly\n     */\n    localMediaStream: `object`,\n    // TODO determine if stream URLs can be deprecated; it looks like the video\n    // tag may accept streams directly these days.\n    /**\n     * Object URL that refers to {@link Call#localMediaStream}. Will be\n     * automatically deallocated when the call ends\n     * @instance\n     * @memberof Call\n     * @member {string}\n     */\n    localMediaStreamUrl: `string`,\n    /**\n     * Access to the remote party’s `MediaStream`. `null` before connected.\n     * @instance\n     * @memberof Call\n     * @member {MediaStream}\n     * @readonly\n     */\n    remoteMediaStream: `object`,\n    /**\n     * Object URL that refers to {@link Call#remoteMediaStream}. Will be\n     * automatically deallocated when the call ends\n     * @instance\n     * @memberof Call\n     * @member {string}\n     * @readonly\n     */\n    remoteMediaStreamUrl: `string`,\n    /**\n     * Indicates if the client is sending audio\n     * @instance\n     * @memberof Call\n     * @member {Boolean}\n     * @readonly\n     */\n    sendingAudio: `boolean`,\n    /**\n     * Indicates if the client is sending video\n     * @instance\n     * @memberof Call\n     * @member {Boolean}\n     * @readonly\n     */\n    sendingVideo: `boolean`,\n    /**\n     * Indicates if the client is receiving audio\n     * @instance\n     * @memberof Call\n     * @member {Boolean}\n     * @readonly\n     */\n    receivingAudio: `boolean`,\n    /**\n     * Indicates if the client is receiving video\n     * @instance\n     * @memberof Call\n     * @member {Boolean}\n     * @readonly\n     */\n    receivingVideo: `boolean`,\n\n    wasSendingAudio: `boolean`,\n    wasSendingVideo: `boolean`,\n    wasReceivingAudio: `boolean`,\n    wasReceivingVideo: `boolean`\n  },\n\n  // FIXME in its current form, any derived property that is an object will emit\n  // a change event everytime a locus gets replaced, even if no values change\n  derived: {\n    isActive: {\n      deps: [`locus`],\n      fn() {\n        return this.locus && isActive(this.locus);\n      }\n    },\n    activeParticipants: {\n      deps: [`locus`],\n      fn() {\n        return activeParticipants(this.locus);\n      }\n    },\n    activeParticipantsCount: {\n      deps: [`activeParticipants`],\n      fn() {\n        return this.activeParticipants.length;\n      }\n    },\n    joined: {\n      deps: [`locus`],\n      default: false,\n      fn() {\n        return this.locus && joined(this.locus);\n      }\n    },\n    joinedOnThisDevice: {\n      deps: [`locus`],\n      default: false,\n      fn() {\n        return this.locus && joinedOnThisDevice(this.spark, this.locus);\n      }\n    },\n    locusUrl: {\n      deps: [`locus`],\n      fn() {\n        return this.locus.url;\n      }\n    },\n    device: {\n      deps: [`locus`],\n      fn() {\n        return this.locus.self && find(this.locus.self.devices, (item) => item.url === this.spark.device.url);\n      }\n    },\n    mediaConnection: {\n      deps: [`device`],\n      fn() {\n        return this.device && this.device.mediaConnections[0];\n      }\n    },\n    mediaId: {\n      deps: [`mediaConnection`],\n      fn() {\n        return this.mediaConnection && this.mediaConnection.mediaId;\n      }\n    },\n    remoteAudioMuted: {\n      deps: [`remote`],\n      fn() {\n        return remoteAudioMuted(this.remote);\n      }\n    },\n    remoteVideoMuted: {\n      deps: [`remote`],\n      fn() {\n        return remoteVideoMuted(this.remote);\n      }\n    },\n    direction: {\n      deps: [`locus`],\n      fn() {\n        // This seems brittle, but I can't come up with a better way. The only\n        // way we should have a Call without a locus is if we just initiated a\n        // call but haven't got the response from locus yet.\n        if (!this.locus) {\n          return `out`;\n        }\n        return direction(this.locus);\n      }\n    },\n    from: {\n      deps: [\n        `direction`,\n        `local`,\n        `remote`\n      ],\n      fn() {\n        return this.direction === `out` ? this.local : this.remote;\n      }\n    },\n    to: {\n      deps: [\n        `direction`,\n        `local`,\n        `remote`\n      ],\n      fn() {\n        return this.direction === `in` ? this.local : this.remote;\n      }\n    },\n    local: {\n      deps: [`locus`],\n      fn() {\n        return this.locus && this.locus.self;\n      }\n    },\n    remote: {\n      deps: [`locus`],\n      fn() {\n        return this.locus && remoteParticipant(this.locus);\n      }\n    },\n    /**\n     * <b>initiated</b> - Offer was sent to remote party but they have not yet accepted <br>\n     * <b>ringing</b> - Remote party has acknowledged the call <br>\n     * <b>connected</b> - At least one party is still on the call <br>\n     * <b>disconnected</b> - All parties have dropped <br>\n     * @instance\n     * @memberof Call\n     * @member {string}\n     * @readonly\n     */\n    status: {\n      deps: [\n        `joinedOnThisDevice`,\n        `local`,\n        `remote`\n      ],\n      fn() {\n        if (this.joinedOnThisDevice && this.remote && participantIsJoined(this.remote)) {\n          return `connected`;\n        }\n\n        if (this.remote && this.local) {\n          if (this.remote.state === `LEFT` || this.local.state === `LEFT`) {\n            return `disconnected`;\n          }\n\n          if (this.remote.state === `DECLINED`) {\n            return `disconnected`;\n          }\n\n          if (this.remote.state === `NOTIFIED`) {\n            return `ringing`;\n          }\n        }\n\n        return `initiated`;\n      }\n    },\n    localAudioDirection: {\n      deps: [`locus`],\n      fn() {\n        return mediaDirectionFromPeerConnection(`audio`, this.pc).toLowerCase();\n      }\n    },\n    localVideoDirection: {\n      deps: [`locus`],\n      fn() {\n        return mediaDirectionFromPeerConnection(`video`, this.pc).toLowerCase();\n      }\n    },\n    remoteAudioDirection: {\n      deps: [`locus`],\n      fn() {\n        // Until Locus fixes the bug that prevents do both renegotiation and\n        // state update, we can't trust the remote direction from the locus\n        return `unknown`;\n      }\n    },\n    remoteVideoDirection: {\n      deps: [`locus`],\n      fn() {\n        // Until Locus fixes the bug that prevents do both renegotiation and\n        // state update, we can't trust the remote direction from the locus\n        return `unknown`;\n      }\n    }\n  },\n\n  /**\n   * Initializer\n   * @private\n   * @param {Object} attrs\n   * @param {Object} options\n   * @returns {undefined}\n   */\n  initialize(...args) {\n    Reflect.apply(SparkPlugin.prototype.initialize, this, args);\n\n    // We can't trust the mercury event name, so we need to pipe all locus\n    // events through the same handler.\n    // TODO adjust plugin-mercury to emit events by namespace so we can listen\n    // for incoming locus events in a single handler.\n    eventKeys.forEach((key) => {\n      this.listenTo(this.spark.mercury, `event:${key}`, (event) => this._onLocusEvent(event));\n    });\n\n    this.on(`disconnected`, () => {\n      this.stopListening(this.spark.mercury);\n      this.off();\n      URL.revokeObjectURL(this.localMediaStreamUrl);\n      URL.revokeObjectURL(this.remoteMediaStreamUrl);\n    });\n\n    this.pc = new RTCPeerConnection({iceServers: []});\n    // TODO given all the other chrome/ff discrepancies, make sure this works in\n    // both browsers\n    this.pc.ontrack = (event) => {\n      this.remoteMediaStream = event.streams[0];\n    };\n\n    this.on(`change:remoteMediaStream`, () => {\n      if (this.remoteMediaStreamUrl) {\n        URL.revokeObjectURL(this.remoteMediaStreamUrl);\n      }\n      this.remoteMediaStreamUrl = URL.createObjectURL(this.remoteMediaStream);\n    });\n\n    this.on(`change:remoteMediaStreamUrl`, () => {\n      this.trigger(`remoteMediaStream:change`);\n    });\n\n    this.on(`change:localMediaStreamUrl`, () => {\n      this.trigger(`localMediaStream:change`);\n    });\n\n    this.on(`change:remoteAudioMuted`, () => {\n      this.trigger(`remoteAudioMuted:change`);\n    });\n\n    this.on(`change:remoteVideoMuted`, () => {\n      this.trigger(`remoteVideoMuted:change`);\n    });\n\n    this.on(`change:isActive`, () => {\n      if (!this.isActive) {\n        if (this.joinedOnThisDevice) {\n          this.logger.info(`call: hanging up due to locus going inactive`);\n          this.hangup();\n        }\n      }\n    });\n\n    this.on(`change:activeParticipantsCount`, () => {\n      const previousLocus = this.previousAttributes().locus;\n      // TODO this logic probably goes in state-parsers\n      if (this.joinedOnThisDevice && this.activeParticipantsCount === 1 && previousLocus && activeParticipants(previousLocus).length > 1) {\n        this.logger.info(`call: hanging up due to last participant in call`);\n        this.hangup();\n      }\n    });\n\n    this.on(`change:status`, () => {\n      switch (this.status) {\n      case `ringing`:\n        this.trigger(`ringing`);\n        break;\n      case `connected`:\n        this.trigger(`connected`);\n        break;\n      case `disconnected`:\n        this.trigger(`disconnected`);\n        break;\n      default:\n        // do nothing\n      }\n    });\n  },\n\n  /**\n   * Answers an incoming call. Only applies to incoming calls. Invoking this\n   * method on an outgoing call is a noop\n   * @instance\n   * @memberof Call\n   * @param {Object} options\n   * @param {MediaStreamConstraints} options.constraints\n   * @returns {Promise}\n   */\n  answer(options) {\n    // TODO make this a noop for outbound calls\n    this.logger.info(`call: answering`);\n    // Locus may *think* we're connected if we e.g. reload the page mid-call. If\n    // the user decides to answer the in-progress call that locus thinks they're\n    // a part of, we should immediately emit the connected event.\n    if (this.joinedOnThisDevice) {\n      this.logger.info(`call: already joined on this device`);\n    }\n    return this._join(`join`, this.locus, options)\n      .then(tap(() => this.logger.info(`call: answered`)));\n  },\n\n  /**\n   * Use to acknowledge (without answering) an incoming call. Will cause the\n   * initiator's Call instance to emit the ringing event.\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  acknowledge() {\n    this.logger.info(`call: acknowledging`);\n    // TODO call this method automatically unless config says otherwise\n    return this.spark.locus.alert(this.locus)\n      .then((locus) => this._setLocus(locus))\n      .then(tap(() => this.logger.info(`call: acknowledged`)));\n  },\n\n  /**\n   * Used by {@link Phone#dial} to initiate an outbound call\n   * @instance\n   * @memberof Call\n   * @param {[type]} invitee\n   * @param {[type]} options\n   * @private\n   * @returns {[type]}\n   */\n  dial(invitee, options) {\n    this.logger.info(`call: dialing`);\n    this._join(`create`, invitee, options)\n      .then(tap(() => this.logger.info(`call: dialed`)))\n      .catch((reason) => {\n        this.trigger(`error`, reason);\n      });\n\n    return this;\n  },\n\n  /**\n   * Disconnects the active call. Applies to both incoming and outgoing calls.\n   * This method may be invoked in any call state and the SDK should take care\n   * to tear down the call and free up all resources regardless of the state.\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  hangup() {\n    // TODO For example, hangup may be invoked immediately after invoking dial()\n    // but before the “locus” has been created. In this case  invoking  hangup()\n    // should short circuit the call setup process and take whatever action is\n    // necessary to ensure all parties are notified that the call is\n    // disconnected.\n    // TODO For incoming calls, invoking hangup should be synonymous with\n    // invoking reject()\n    this.logger.info(`call: hanging up`);\n\n    end(this.pc);\n\n    if (!this.locus) {\n      this.logger.info(`call: no locus, waiting for rest call to complete before hanging up`);\n      return this.when(`change:locus`)\n        .then(() => this.hangup());\n    }\n\n    return this._hangup();\n  },\n\n  /**\n   * Does the internal work necessary to end a call while allowing hangup() to\n   * call itself without getting stuck in promise change because of oneFlight\n   * @private\n   * @returns {Promise}\n   */\n  _hangup: oneFlight(`hangup`, function _hangup() {\n    return this.spark.locus.leave(this.locus)\n      .then((locus) => this._setLocus(locus))\n      // TODO update sending and receving based on the peer connection's streams\n      .then(() => this.set({\n        sendingAudio: false,\n        sendingVideo: false,\n        receivingAudio: false,\n        receivingVideo: false\n      }))\n      .then(tap(() => this.stopListening(this.spark.mercury)))\n      .then(tap(() => this.off()))\n      .then(tap(() => this.logger.info(`call: hung up`)));\n  }),\n\n  /**\n   * Alias of {@link Call#reject}\n   * @see {@link Call#reject}\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  decline() {\n    return this.reject();\n  },\n\n  /**\n   * Rejects an incoming call. Only applies to incoming calls. Invoking this\n   * method on an outgoing call is a no-op.\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  reject: oneFlight(`reject`, function reject() {\n    // TODO should be a noop for outgoing calls\n    this.logger.info(`call: rejecting`);\n    /* eslint no-invalid-this: [0] */\n    return this.spark.locus.decline(this.locus)\n      .then((locus) => this._setLocus(locus))\n      .then(tap(() => this.stopListening(this.spark.mercury)))\n      .then(tap(() => this.off()))\n      .then(tap(() => this.logger.info(`call: rejected`)));\n  }),\n\n  /**\n   * Starts sending audio to the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  startSendingAudio() {\n    return this._changeMedia({sendingAudio: true});\n  },\n\n  /**\n   * Starts sending video to the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  startSendingVideo() {\n    return this._changeMedia({sendingVideo: true});\n  },\n\n  startReceivingAudio() {\n    return this._changeMedia({receivingAudio: true});\n  },\n\n  startReceivingVideo() {\n    return this._changeMedia({receivingVideo: true});\n  },\n\n  /**\n   * Toggles receiving audio to the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleReceivingAudio() {\n    return this.receivingAudio ? this.stopReceivingAudio() : this.startReceivingAudio();\n  },\n\n  /**\n   * Toggles receiving video to the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleReceivingVideo() {\n    return this.receivingVideo ? this.stopReceivingVideo() : this.startReceivingVideo();\n  },\n\n  stopReceivingAudio() {\n    return this._changeMedia({receivingAudio: false});\n  },\n\n  stopReceivingVideo() {\n    return this._changeMedia({receivingVideo: false});\n  },\n\n  /**\n   * Toggles sending audio to the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleSendingAudio() {\n    return this.sendingAudio ? this.stopSendingAudio() : this.startSendingAudio();\n  },\n\n  /**\n   * Toggles sending video to the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleSendingVideo() {\n    return this.sendingVideo ? this.stopSendingVideo() : this.startSendingVideo();\n  },\n\n  /**\n   * Sends feedback about the call to the Cisco Spark cloud\n   * @instance\n   * @memberof Call\n   * @param {Types~Feedback} feedback\n   * @returns {Promise}\n   */\n  sendFeedback(feedback) {\n    return this.spark.metrics.submit(`meetup_call_user_rating`, feedback);\n  },\n\n  /**\n   * Stops sending audio to the Cisco Spark Cloud. (stops broadcast immediately,\n   * even if renegotiation has not completed)\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  stopSendingAudio() {\n    return this._changeMedia({sendingAudio: false});\n  },\n\n  /**\n   * Stops sending video to the Cisco Spark Cloud. (stops broadcast immediately,\n   * even if renegotiation has not completed)\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  stopSendingVideo() {\n    return this._changeMedia({sendingVideo: false});\n  },\n\n  _changeMedia(constraints) {\n    return new Promise((resolve) => {\n      /* eslint complexity: [0] */\n      if (!this.pc) {\n        resolve();\n        return;\n      }\n\n      constraints = defaults({}, constraints, {\n        sendingVideo: this.sendingVideo,\n        sendingAudio: this.sendingAudio,\n        receivingVideo: this.receivingVideo,\n        receivingAudio: this.receivingAudio\n      });\n\n      constraints = Object.assign({}, constraints, {\n        wasSendingAudio: this.sendingAudio,\n        wasSendingVideo: this.sendingVideo,\n        wasReceivingAudio: this.receivingAudio,\n        wasReceivingVideo: this.receivingVideo\n      });\n\n      this.set(constraints);\n\n      const promises = [];\n      if (constraints.sendingAudio && !constraints.wasSendingAudio) {\n        promises.push(startSendingAudio(this.pc));\n      }\n\n      if (!constraints.sendingAudio && constraints.wasSendingAudio) {\n        promises.push(stopSendingAudio(this.pc));\n      }\n\n      if (constraints.sendingVideo && !constraints.wasSendingVideo) {\n        promises.push(startSendingVideo(this.pc));\n      }\n\n      if (!constraints.sendingVideo && constraints.wasSendingVideo) {\n        promises.push(stopSendingVideo(this.pc));\n      }\n\n      if (constraints.receivingAudio && !constraints.wasReceivingAudio) {\n        promises.push(startReceivingAudio(this.pc));\n      }\n\n      if (!constraints.receivingAudio && constraints.wasReceivingAudio) {\n        promises.push(stopReceivingAudio(this.pc));\n      }\n\n      if (constraints.receivingVideo && !constraints.wasReceivingVideo) {\n        promises.push(startReceivingVideo(this.pc));\n      }\n\n      if (!constraints.receivingVideo && constraints.wasReceivingVideo) {\n        promises.push(stopReceivingVideo(this.pc));\n      }\n\n\n      resolve(Promise.all(promises)\n        .then(() => this._updateMedia())\n        .then(() => this.unset([\n          `wasSendingAudio`,\n          `wasSendingVideo`,\n          `wasReceivingAudio`,\n          `wasReceivingVideo`\n        ])));\n    });\n  },\n\n  _join(locusMethodName, target, options) {\n    options = options || {};\n    options.constraints = defaults(options.constraints, {\n      audio: true,\n      video: true\n    });\n    const recvOnly = !options.constraints.audio && !options.constraints.video;\n    options.offerOptions = defaults(options.offerOptions, {\n      offerToReceiveAudio: recvOnly || options.constraints.audio,\n      offerToReceiveVideo: recvOnly || options.constraints.video\n    });\n\n    let promise;\n    if (!recvOnly) {\n      promise = Promise.resolve(options.localMediaStream || this.spark.phone.createLocalMediaStream(options))\n        .then((localMediaStream) => {\n          this.localMediaStream = localMediaStream;\n          this.localMediaStreamUrl = URL.createObjectURL(localMediaStream);\n          addStream(this.pc, localMediaStream);\n        });\n    }\n\n    return Promise.resolve(promise)\n      .then(() => createOffer(this.pc, options.offerOptions))\n      .then((offer) => this.spark.locus[locusMethodName](target, {\n        localSdp: offer\n      }))\n      .then((locus) => {\n        this._setLocus(locus);\n        const answer = JSON.parse(this.mediaConnection.remoteSdp).sdp;\n        return acceptAnswer(this.pc, answer);\n      })\n      .then(() => {\n        this.set({\n          sendingAudio: options.constraints.audio,\n          sendingVideo: options.constraints.video,\n          receivingAudio: options.offerOptions.offerToReceiveAudio,\n          receivingVideo: options.offerOptions.offerToReceiveVideo\n        });\n      });\n  },\n\n  _onLocusEvent(event) {\n    if (this.locus && event.data.locus.url === this.locus.url) {\n      this.logger.info(`locus event: ${event.data.eventType}`);\n      this._setLocus(event.data.locus);\n    }\n  },\n\n  _setLocus(incoming) {\n    const current = this.locus;\n    if (!current) {\n      this.locus = incoming;\n      return Promise.resolve();\n    }\n    const action = this.spark.locus.compare(current, incoming);\n\n    switch (action) {\n    case USE_INCOMING:\n      this.locus = incoming;\n      break;\n    case FETCH:\n      return this.spark.locus.get(current)\n         .then((locus) => this._setLocus(locus));\n    default:\n      // do nothing\n    }\n\n    return Promise.resolve();\n  },\n\n  _updateMedia: oneFlight(`_updateMedia`, function _updateMedia() {\n    /* eslint max-nested-callbacks: [0] */\n    return new Promise((resolve) => {\n      process.nextTick(() => {\n        resolve(createOffer(this.pc, {\n          offerToReceiveAudio: this.receivingAudio,\n          offerToReceiveVideo: this.receivingVideo\n        })\n          .then((offer) => this.spark.locus.updateMedia(this.locus, {\n            localSdp: offer,\n            mediaId: this.mediaId,\n            audioMuted: !this.sendingAudio,\n            videoMuted: !this.sendingVideo\n          }))\n          .then((locus) => {\n            this._setLocus(locus);\n            const sdp = JSON.parse(this.mediaConnection.remoteSdp).sdp;\n            return acceptAnswer(this.pc, sdp);\n          }));\n      });\n    });\n  })\n});\n\nCall.make = function make(attrs, options) {\n  return new Call(attrs, options);\n};\n\nexport default Call;\n"]}
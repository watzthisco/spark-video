{"version":3,"sources":["../../../src/plugins/credentials/grant-errors.js"],"names":[],"mappings":";;;;;;;;;;AAQA;;;;;;AAEA,IAAM,aAAa,2BAAY;AAC7B,WAAS,SAAS,OAAT,CAAiB,GAAjB,EAAsB;AAC7B,oCAAwB,IAAxB,EAA8B;AAC5B,aAAO;AACL,oBAAY,IADP;AAEL,eAAO,IAAI,IAAJ,CAAS;AAFX,OADqB;AAK5B,wBAAkB;AAChB,oBAAY,IADI;AAEhB,eAAO,IAAI,IAAJ,CAAS;AAFA,OALU;AAS5B,gBAAU;AACR,oBAAY,IADJ;AAER,eAAO,IAAI,IAAJ,CAAS;AAFR,OATkB;AAa5B,WAAK;AACH,oBAAY,KADT;AAEH,eAAO;AAFJ;AAbuB,KAA9B;;AAmBA,WAAO,KAAK,gBAAZ;AACD,GAtB4B;AAuB7B;AAvB6B,CAAZ,CAAnB,CAVA;;;;;;AAMA;;AA8BA,IAAM,sBAAsB,2BAAY,UAAZ,wBAA5B;AACA,IAAM,qBAAqB,2BAAY,UAAZ,uBAA3B;AACA,IAAM,oBAAoB,2BAAY,UAAZ,sBAA1B;AACA,IAAM,0BAA0B,2BAAY,UAAZ,4BAAhC;AACA,IAAM,0BAA0B,2BAAY,UAAZ,4BAAhC;AACA,IAAM,oBAAoB,2BAAY,UAAZ,sBAA1B;;AAEA,IAAM,SAAS;AACb,wBADa;AAEb,0CAFa;AAGb,wCAHa;AAIb,sCAJa;AAKb,kDALa;AAMb,kDANa;AAOb,sCAPa;AAQb,mBAAiB,mBARJ;AASb,kBAAgB,kBATH;AAUb,iBAAe,iBAVF;AAWb,uBAAqB,uBAXR;AAYb,0BAAwB,uBAZX;AAab,iBAAe,iBAbF;AAcb,QAda,kBAcN,WAdM,EAcO;AAClB,WAAO,OAAO,WAAP,KAAuB,UAA9B;AACD;AAhBY,CAAf;;kBAmBe,M","file":"grant-errors.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\n/* eslint camelcase: [0] */\n\nimport extendError from 'extend-error';\n\nconst OAuthError = extendError({\n  parseFn: function parseFn(res) {\n    Object.defineProperties(this, {\n      error: {\n        enumerable: true,\n        value: res.body.error\n      },\n      errorDescription: {\n        enumerable: true,\n        value: res.body.error_description\n      },\n      errorUri: {\n        enumerable: true,\n        value: res.body.error_uri\n      },\n      res: {\n        enumerable: false,\n        value: res\n      }\n    });\n\n    return this.errorDescription;\n  },\n  subTypeName: `OAuthError`\n});\n\nconst InvalidRequestError = extendError(OAuthError, `InvalidRequestError`);\nconst InvalidClientError = extendError(OAuthError, `InvalidClientError`);\nconst InvalidGrantError = extendError(OAuthError, `InvalidGrantError`);\nconst UnauthorizedClientError = extendError(OAuthError, `UnauthorizedClientError`);\nconst UnsupportGrantTypeError = extendError(OAuthError, `UnsupportGrantTypeError`);\nconst InvalidScopeError = extendError(OAuthError, `InvalidScopeError`);\n\nconst errors = {\n  OAuthError,\n  InvalidRequestError,\n  InvalidClientError,\n  InvalidGrantError,\n  UnauthorizedClientError,\n  UnsupportGrantTypeError,\n  InvalidScopeError,\n  invalid_request: InvalidRequestError,\n  invalid_client: InvalidClientError,\n  invalid_grant: InvalidGrantError,\n  unauthorized_client: UnauthorizedClientError,\n  unsupported_grant_type: UnsupportGrantTypeError,\n  invalid_scope: InvalidScopeError,\n  select(errorString) {\n    return errors[errorString] || OAuthError;\n  }\n};\n\nexport default errors;\n"]}
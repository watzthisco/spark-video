{"version":3,"sources":["../../src/interceptors/request-timing.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;;;AAEA;;;;IAGqB,wB;;;;;;;;;;;;AASnB;;;;;8BAKU,O,EAAS;AACjB,cAAQ,QAAR,GAAmB,QAAQ,QAAR,IAAoB,EAAvC;AACA,cAAQ,QAAR,CAAiB,YAAjB,GAAgC,KAAK,GAAL,EAAhC;AACA,aAAO,OAAP;AACD;;AAED;;;;;;;;mCAKe,O,EAAS;AACtB,cAAQ,QAAR,CAAiB,UAAjB,GAA8B,QAAQ,QAAR,CAAiB,WAAjB,GAA+B,KAAK,GAAL,EAA7D;AACA,aAAO,kBAAQ,MAAR,CAAe,OAAf,CAAP;AACD;;AAED;;;;;;;;;+BAMW,O,EAAS,Q,EAAU;AAC5B,cAAQ,QAAR,CAAiB,UAAjB,GAA8B,KAAK,GAAL,EAA9B;AACA,aAAO,kBAAQ,OAAR,CAAgB,QAAhB,CAAP;AACD;;AAED;;;;;;;;;oCAMgB,O,EAAS,M,EAAQ;AAC/B,cAAQ,QAAR,CAAiB,UAAjB,GAA8B,QAAQ,QAAR,CAAiB,WAAjB,GAA+B,KAAK,GAAL,EAA7D;AACA,aAAO,kBAAQ,MAAR,CAAe,MAAf,CAAP;AACD;;;;AAjDD;;;;2BAIc,O,EAAS;AACrB,aAAO,IAAI,wBAAJ,CAA6B,IAA7B,EAAmC,OAAnC,CAAP;AACD;;;yBAlBH;;;;;;kBAWqB,wB","file":"request-timing.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nimport {Interceptor} from '@ciscospark/http-core';\n\n/**\n * @class\n */\nexport default class RequestTimingInterceptor extends Interceptor {\n  /**\n   * @param {Object} options\n   * @returns {RequestTimingInterceptor}\n   */\n  static create(options) {\n    return new RequestTimingInterceptor(this, options);\n  }\n\n  /**\n   * @see Interceptor#onRequest\n   * @param {Object} options\n   * @returns {Object}\n   */\n  onRequest(options) {\n    options.$timings = options.$timings || {};\n    options.$timings.requestStart = Date.now();\n    return options;\n  }\n\n  /**\n   * @see Interceptor#onRequestError\n   * @param {Object} options\n   * @returns {Object}\n   */\n  onRequestError(options) {\n    options.$timings.requestEnd = options.$timings.requestFail = Date.now();\n    return Promise.reject(options);\n  }\n\n  /**\n   * @see Interceptor#onResponse\n   * @param {Object} options\n   * @param {HttpResponse} response\n   * @returns {Object}\n   */\n  onResponse(options, response) {\n    options.$timings.requestEnd = Date.now();\n    return Promise.resolve(response);\n  }\n\n  /**\n   * @see Interceptor#onResponseError\n   * @param {Object} options\n   * @param {Error} reason\n   * @returns {Object}\n   */\n  onResponseError(options, reason) {\n    options.$timings.requestEnd = options.$timings.requestFail = Date.now();\n    return Promise.reject(reason);\n  }\n}\n"]}
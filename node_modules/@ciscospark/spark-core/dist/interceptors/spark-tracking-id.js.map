{"version":3,"sources":["../../src/interceptors/spark-tracking-id.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;AACA;;;;;;AAEA;;;AATA;;;;;;IAYqB,0B;;;AACnB;;;;;;;AAMA,sCAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA;;AAAA,oIACpB,EAAC,YAAD,EADoB;;AAG1B,QAAI,CAAC,OAAD,IAAY,CAAC,QAAQ,MAAzB,EAAiC;AAC/B,YAAM,IAAI,KAAJ,0FAAN;AACD;;AAED,QAAI,WAAW,CAAf;AACA,QAAM,OAAO,QAAQ,IAAR,IAAgB,eAAK,EAAL,EAA7B;AACA,QAAM,SAAS,QAAQ,MAAR,kBAAf;;AAEA,2CAA8B;AAC5B,YAAM;AACJ,kBAAU,KADN;AAEJ,eAAO;AAFH,OADsB;AAK5B,cAAQ;AACN,kBAAU,KADJ;AAEN,eAAO;AAFD,OALoB;AAS5B,gBAAU;AACR,aAAK,SAAS,GAAT,GAAe;AAClB,sBAAY,CAAZ;AACA,iBAAO,QAAP;AACD;AAJO;AATkB,KAA9B;AAX0B;AA2B3B;;AAED;;;;;;;;;;AAQA;;;;;8BAKU,O,EAAS;AACjB,UAAI,KAAK,kBAAL,CAAwB,OAAxB,CAAJ,EAAsC;AACpC,gBAAQ,OAAR,CAAgB,UAAhB,GAA6B,KAAK,mBAAL,CAAyB,OAAzB,CAA7B;AACD;AACD,aAAO,OAAP;AACD;;AAED;;;;;;;;uCAKmB,O,EAAS;AAC1B,aAAO,CAAC,QAAQ,OAAR,CAAgB,UAAxB;AACD;;AAED;;;;;;;;0CAKsB;AACpB,aAAU,KAAK,MAAf,SAAyB,KAAK,IAA9B,SAAsC,KAAK,QAA3C;AACD;;;2BAhCa,O,EAAS;AACrB,aAAO,IAAI,0BAAJ,CAA+B,IAA/B,EAAqC,OAArC,CAAP;AACD;;;;;kBA1CkB,0B","file":"spark-tracking-id.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nimport {Interceptor} from '@ciscospark/http-core';\nimport uuid from 'uuid';\n\n/**\n * @class\n */\nexport default class SparkTrackingIdInterceptor extends Interceptor {\n  /**\n   * @constructor\n   * @param {ProxySpark} spark\n   * @param {Object} options\n   * @returns {SparkTrackingIdInterceptor}\n   */\n  constructor(spark, options) {\n    super({spark});\n\n    if (!options || !options.prefix) {\n      throw new Error(`\\`options.prefix\\` is required. Did you forget to specify it at config.trackingIdPrefix?`);\n    }\n\n    let sequence = 0;\n    const base = options.base || uuid.v4();\n    const prefix = options.prefix || `spark-js-sdk`;\n\n    Object.defineProperties(this, {\n      base: {\n        writable: false,\n        value: base\n      },\n      prefix: {\n        writable: false,\n        value: prefix\n      },\n      sequence: {\n        get: function get() {\n          sequence += 1;\n          return sequence;\n        }\n      }\n    });\n  }\n\n  /**\n   * @param {Object} options\n   * @returns {SparkTrackingIdInterceptor}\n   */\n  static create(options) {\n    return new SparkTrackingIdInterceptor(this, options);\n  }\n\n  /**\n   * @see Interceptor#onRequest\n   * @param {Object} options\n   * @returns {Object}\n   */\n  onRequest(options) {\n    if (this.requiresTrackingId(options)) {\n      options.headers.trackingid = this._generateTrackingId(options);\n    }\n    return options;\n  }\n\n  /**\n   * Determines whether or not include a tracking id\n   * @param {Object} options\n   * @returns {boolean}\n   */\n  requiresTrackingId(options) {\n    return !options.headers.trackingid;\n  }\n\n  /**\n   * Generates a tracking id\n   * @private\n   * @returns {string}\n   */\n  _generateTrackingId() {\n    return `${this.prefix}_${this.base}_${this.sequence}`;\n  }\n}\n"]}
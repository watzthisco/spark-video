{"version":3,"sources":["../src/spark-core.js"],"names":[],"mappings":"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","file":"spark-core.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nimport {HttpStatusInterceptor, defaults as requestDefaults} from '@ciscospark/http-core';\nimport {get, isFunction, merge} from 'lodash';\nimport AmpState from 'ampersand-state';\nimport NetworkTimingInterceptor from './interceptors/network-timing';\nimport RedirectInterceptor from './interceptors/redirect';\nimport RequestLoggerInterceptor from './interceptors/request-logger';\nimport RequestTimingInterceptor from './interceptors/request-timing';\nimport ResponseLoggerInterceptor from './interceptors/response-logger';\nimport SparkHttpError from './lib/spark-http-error';\nimport SparkTrackingIdInterceptor from './interceptors/spark-tracking-id';\nimport config from './config';\n\nlet constructorCalled = false;\nconst derived = {};\n\n/**\n * List of loaded plugins. Only exported so that plugins can see which other\n * plugins have been loaded to avoid clobbering eachother (THIS IS A TEMPORARY\n * MEASURE!)\n * @private\n * @type {Object}\n */\nexport const children = {};\n\nlet Spark;\n\nconst interceptors = {\n  SparkTrackingIdInterceptor() {\n    return SparkTrackingIdInterceptor.create({\n      prefix: get(this, `config.trackingIdPrefix`, `spark-js-sdk`)\n    });\n  },\n  /* eslint no-extra-parens: [0] */\n  RequestLoggerInterceptor: (process.env.ENABLE_NETWORK_LOGGING || process.env.ENABLE_VERBOSE_NETWORK_LOGGING) ? RequestLoggerInterceptor.create : undefined,\n  ResponseLoggerInterceptor: (process.env.ENABLE_NETWORK_LOGGING || process.env.ENABLE_VERBOSE_NETWORK_LOGGING) ? ResponseLoggerInterceptor.create : undefined,\n  RequestTimingInterceptor: RequestTimingInterceptor.create,\n  UrlInterceptor: undefined,\n  AuthInterceptor: undefined,\n  RedirectInterceptor: RedirectInterceptor.create,\n  HttpStatusInterceptor() {\n    return HttpStatusInterceptor.create({\n      error: SparkHttpError\n    });\n  },\n  NetworkTimingInterceptor: NetworkTimingInterceptor.create\n};\n\nconst preInterceptors = [\n  `ResponseLoggerInterceptor`,\n  `RequestTimingInterceptor`,\n  `SparkTrackingIdInterceptor`\n];\n\nconst postInterceptors = [\n  `NetworkTimingInterceptor`,\n  `RequestLoggerInterceptor`\n];\n\nconst SparkCore = AmpState.extend({\n  session: {\n    config: {\n      type: `object`\n    },\n    request: {\n      setOnce: true,\n      // It's supposed to be a function, but that's not a type defined in\n      // Ampersand\n      type: `any`\n    }\n  },\n\n  authenticate(...args) {\n    return this.credentials.authenticate(...args);\n  },\n\n  authorize(...args) {\n    return this.credentials.authorize(...args);\n  },\n\n  refresh(...args) {\n    return this.credentials.refresh(...args);\n  },\n\n  initialize() {\n    this.config = merge({}, config, this.config);\n\n    // Make nested events propagate in a consistent manner\n    Object.keys(children).forEach((key) => {\n      this.listenTo(this[key], `change`, (...args) => {\n        args.unshift(`change:${key}`);\n        this.trigger(...args);\n      });\n    });\n\n    const addInterceptor = (ints, key) => {\n      const interceptor = interceptors[key];\n\n      if (!isFunction(interceptor)) {\n        return ints;\n      }\n\n      // This is a bit of a hack, but we can enhance it later.\n      const int = Reflect.apply(interceptor, this, []);\n      if (int instanceof SparkTrackingIdInterceptor) {\n        Reflect.defineProperty(this, `trackingId`, {\n          enumerable: false,\n          get() {\n            return int._generateTrackingId();\n          }\n        });\n      }\n\n      ints.push(int);\n\n      return ints;\n    };\n\n    let ints = [];\n    ints = preInterceptors.reduce(addInterceptor, ints);\n    ints = Object.keys(interceptors).filter((key) => !(preInterceptors.includes(key) || postInterceptors.includes(key))).reduce(addInterceptor, ints);\n    ints = postInterceptors.reduce(addInterceptor, ints);\n\n    this.request = requestDefaults({\n      json: true,\n      interceptors: ints\n    });\n  },\n\n  logout(...args) {\n    return this.credentials.logout(...args);\n  }\n});\n\n/**\n * @returns {undefined}\n */\nfunction makeSparkConstructor() {\n  Spark = SparkCore.extend({\n    children,\n    derived\n  });\n}\n\n/**\n * @param {Object} attrs\n * @param {Object} attrs.credentials\n * @param {Object} attrs.config\n * @returns {Spark}\n */\nexport default function ProxySpark(...args) {\n  if (!Spark) {\n    makeSparkConstructor();\n  }\n\n  constructorCalled = true;\n\n  const spark = new Spark(...args);\n  return spark;\n}\n\n/**\n * @method registerPlugin\n * @param {string} name\n * @param {function} constructor\n * @param {Object} options\n * @param {Array<string>} options.proxies\n * @param {Object} options.interceptors\n * @returns {null}\n */\nexport function registerPlugin(name, constructor, options) {\n  /* eslint complexity: [0] */\n  if (constructorCalled) {\n    const message = `registerPlugin() should not be called after instantiating a Spark instance`;\n    /* eslint no-console: [0] */\n    console.warn(message);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== `production`) {\n      throw new Error(message);\n    }\n  }\n\n  options = options || {};\n\n  if (!children[name] || options.replace) {\n    children[name] = constructor;\n\n    if (options.proxies) {\n      options.proxies.forEach((key) => {\n        derived[key] = {\n          deps: [`${name}.${key}`],\n          fn() {\n            return this[name][key];\n          }\n        };\n      });\n    }\n\n    if (options.interceptors) {\n      Object.keys(options.interceptors).forEach((key) => {\n        interceptors[key] = options.interceptors[key];\n      });\n    }\n\n    if (options.config) {\n      merge(config, options.config);\n    }\n\n    makeSparkConstructor();\n  }\n}\n\nexport {default as SparkHttpError} from './lib/spark-http-error';\nexport {default as SparkPlugin} from './lib/spark-plugin';\nexport {default as AuthInterceptor} from './plugins/credentials/auth-interceptor';\nexport {default as NetworkTimingInterceptor} from './interceptors/network-timing';\nexport {default as RedirectInterceptor} from './interceptors/redirect';\nexport {default as RequestLoggerInterceptor} from './interceptors/request-logger';\nexport {default as ResponseLoggerInterceptor} from './interceptors/response-logger';\nexport {default as RequestTimingInterceptor} from './interceptors/request-timing';\nexport {default as SparkTrackingIdInterceptor} from './interceptors/spark-tracking-id';\n"]}
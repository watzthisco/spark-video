{"version":3,"sources":["../../src/lib/spark-plugin.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAMA;;;;AACA;;;;;;AAPA;;;;;;AASA,IAAM,cAAc,yBAAS,MAAT,CAAgB;AAClC,WAAS;AACP,YAAQ;AACN;AACA;AACA,aAAO,KAHD;AAIN,YAAM,yBAJA;AAQN,QARM,gBAQD;AACH,YAAI,KAAK,KAAL,IAAc,KAAK,KAAL,CAAW,MAA7B,EAAqC;AACnC,cAAM,YAAY,KAAK,YAAL,EAAlB;AACA,cAAI,SAAJ,EAAe;AACb,mBAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,UAAU,WAAV,EAAlB,CAAP;AACD;;AAED,iBAAO,KAAK,KAAL,CAAW,MAAlB;AACD;;AAED,eAAO,EAAP;AACD;AAnBK,KADD;;AAuBP,YAAQ;AACN,YAAM,yBADA;AAKN,QALM,gBAKD;AACH,eAAO,KAAK,KAAL,CAAW,MAAX,IAAqB,OAA5B;AACD;AAPK,KAvBD;;AAiCP,WAAO;AACL,YAAM,UADD;AAEL,QAFK,gBAEA;AACH,YAAI,CAAC,KAAK,MAAN,IAAgB,CAAC,KAAK,UAA1B,EAAsC;AACpC,gBAAM,IAAI,KAAJ,mKAAN;AACD;;AAED;AACA,YAAI,SAAS,IAAb;AACA,eAAO,OAAO,MAAP,IAAiB,OAAO,UAA/B,EAA2C;AACzC,mBAAS,OAAO,MAAP,IAAiB,OAAO,UAAjC;AACD;;AAED,eAAO,MAAP;AACD;AAdI;AAjCA,GADyB;;AAoDlC,WAAS;AACP,YAAQ;AACN;AADM;AADD,GApDyB;;AA0DlC;;;;;;AAMA,OAhEkC,iBAgE5B,OAhE4B,EAgEnB;AAAA;;AACb,wBAAY,KAAK,UAAjB,EAA6B,OAA7B,CAAqC,UAAC,GAAD,EAAS;AAC5C,UAAI,gBAAJ,EAAsB;AACpB,cAAK,KAAL,CAAW,GAAX,EAAgB,OAAhB;AACD;AACF,KAJD;;AAMA,wBAAY,KAAK,SAAjB,EAA4B,OAA5B,CAAoC,UAAC,GAAD,EAAS;AAC3C,YAAK,GAAL,EAAU,KAAV;AACD,KAFD;;AAIA,wBAAY,KAAK,YAAjB,EAA+B,OAA/B,CAAuC,UAAC,GAAD,EAAS;AAC9C,YAAK,GAAL,EAAU,KAAV;AACD,KAFD;;AAIA,WAAO,IAAP;AACD,GAhFiC;AAkFlC,YAlFkC,wBAkFb;AAAA;;AAAA,sCAAP,KAAO;AAAP,WAAO;AAAA;;AACnB,yBAAc,yBAAS,SAAT,CAAmB,UAAjC,EAA6C,IAA7C,EAAmD,KAAnD;;AAEA;AACA,SAAK,EAAL,WAAkB,UAAC,KAAD,EAAQ,OAAR,EAAoB;AACpC,aAAK,MAAL,CAAY,OAAZ,aAA8B,OAAK,SAAL,CAAe,WAAf,EAA9B,EAA8D,OAAK,MAAnE,UAAiF,OAAjF;AACD,KAFD;AAGD,GAzFiC;;;AA2FlC;;;;AAIA,SA/FkC,mBA+F1B,KA/F0B,EA+FnB;AACb,WAAO,eAAK,OAAL,CAAa,KAAK,SAAL,EAAb,EAA+B,EAAC,YAAD,EAA/B,CAAP;AACD,GAjGiC;AAmGlC,SAnGkC,qBAmGjB;AAAA;;AACf,WAAO,eAAK,KAAL,EAAW,OAAX,yBAAP;AACD,GArGiC;AAuGlC,QAvGkC,oBAuGlB;AAAA;;AACd,WAAO,gBAAK,KAAL,EAAW,MAAX,0BAAP;AACD,GAzGiC;AA2GlC,MA3GkC,gBA2G7B,SA3G6B,EA2GlB;AAAA;;AACd,WAAO,sBAAY,UAAC,OAAD,EAAa;AAC9B,aAAK,IAAL,CAAU,SAAV,EAAqB;AAAA,2CAAI,IAAJ;AAAI,cAAJ;AAAA;;AAAA,eAAa,QAAQ,IAAR,CAAb;AAAA,OAArB;AACD,KAFM,CAAP;AAGD;AA/GiC,CAAhB,CAApB;;kBAkHe,W","file":"spark-plugin.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\nimport AmpState from 'ampersand-state';\nimport util from 'util';\n\nconst SparkPlugin = AmpState.extend({\n  derived: {\n    config: {\n      // figure out why caching config breaks the refresh integration test\n      // but not the refresh automation test.\n      cache: false,\n      deps: [\n        `spark`,\n        `spark.config`\n      ],\n      fn() {\n        if (this.spark && this.spark.config) {\n          const namespace = this.getNamespace();\n          if (namespace) {\n            return this.spark.config[namespace.toLowerCase()];\n          }\n\n          return this.spark.config;\n        }\n\n        return {};\n      }\n    },\n\n    logger: {\n      deps: [\n        `spark`,\n        `spark.logger`\n      ],\n      fn() {\n        return this.spark.logger || console;\n      }\n    },\n\n    spark: {\n      deps: [`parent`],\n      fn() {\n        if (!this.parent && !this.collection) {\n          throw new Error(`Cannot determine \\`this.spark\\` without \\`this.parent\\` or \\`this.collection\\`. Please initialize \\`this\\` via \\`children\\` or \\`collection\\` or set \\`this.parent\\` manually`);\n        }\n\n        /* eslint consistent-this: [0] */\n        let parent = this;\n        while (parent.parent || parent.collection) {\n          parent = parent.parent || parent.collection;\n        }\n\n        return parent;\n      }\n    }\n  },\n\n  session: {\n    parent: {\n      type: `any`\n    }\n  },\n\n  /**\n   * Overrides AmpersandState#clear to make sure we never unset `parent` and\n   * recursively visits children/collections.\n   * @param {Object} options\n   * @returns {SparkPlugin}\n   */\n  clear(options) {\n    Object.keys(this.attributes).forEach((key) => {\n      if (key !== `parent`) {\n        this.unset(key, options);\n      }\n    });\n\n    Object.keys(this._children).forEach((key) => {\n      this[key].clear();\n    });\n\n    Object.keys(this._collections).forEach((key) => {\n      this[key].reset();\n    });\n\n    return this;\n  },\n\n  initialize(...attrs) {\n    Reflect.apply(AmpState.prototype.initialize, this, attrs);\n\n    // Propagate change:[attribute] events from children\n    this.on(`change`, (model, options) => {\n      this.parent.trigger(`change:${this.namespace.toLowerCase()}`, this.parent, this, options);\n    });\n  },\n\n  /**\n   * @param {number} depth\n   * @returns {Object}\n   */\n  inspect(depth) {\n    return util.inspect(this.serialize(), {depth});\n  },\n\n  request(...args) {\n    return this.spark.request(...args);\n  },\n\n  upload(...args) {\n    return this.spark.upload(...args);\n  },\n\n  when(eventName) {\n    return new Promise((resolve) => {\n      this.once(eventName, (...args) => resolve(args));\n    });\n  }\n});\n\nexport default SparkPlugin;\n"]}